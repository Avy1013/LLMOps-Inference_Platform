---
# Source: kong/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kong-kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.9"
---
# Source: kong/templates/admission-webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kong-kong-validation-webhook-ca-keypair
  namespace:  default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.9"
type: kubernetes.io/tls
data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQVBVRlB5cVFoaC90NW04bGVwMUE2YUl3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalV3T1RFME1qRXdNVEUzV2hjTgpNelV3T1RFeU1qRXdNVEUzV2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOb29CSEpLRHA0dHQ2c1JWZXBzUEg1L0xLZEcKUW9QaTYxU05rV3RJUVpkcDZqaCtvSjFMNjdYN251L085WG11b3FtbjRhSE1INnpxU29jalRlRUtRTm8wWUwxbApYUVM0bFluQm9rUHV1bERYSkw4aFhvb093NmxnNkMraGxkZFBvakxVTVJqM0JqZ3J0cFR0RnFpVlh0cXNqcVJvClhrbmsrZlU0cm5heUVwV2VFVXJCYmQrdE1mQ0FBMHRlTDllaC9YUW80dmFvZUVxYzBUOGtLbVpQS0NRWlUyVXQKNEYzb2R6WWptanRNNis4bUxRRTFiMlN6S24rc0JCMUxOREpwVUk1bnVlTlhDZ25iL2VTdWp3cUE3THFPT2lqQgpGSytaemR5cTNTbzNXOGxlU0lJSXZiMzVlQTRmY2xwbllIYWtaRTF3WC9sc2dlRGpRUVZoTjhHL0hva0NBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCVHFOWFBMMTcyOCtzanExMGo0K3EwTgp5S0RLY1RBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVdwM2NPSmkrdU1zTW96Z0NEbG03MUVUYWh0eXhUNWVLCnVDWitrRXE3ejBHWUllSTNtZUptS2NuSGVWd3UyZFk2Sm1wNmlaYWxIbjdRYjVqa3EwSEZUREh1eDdyTWx3WFIKempialFPV2UxdDR5cVU4WUZ1VDg0WWpXWVgvbVczbVJjN3lpVXZzZHhXaGhLci93RHRNSTI2bVBTZzNqZkEwNgpPQmpWLzYrUXBwdHoyYnFNdGJwTlJYVnM2MXFYY3dRVElibkhTWUc1d0xtTFN0amlpdGF5V1pleFZaQnhqZitkCnM2bUN4aG5weXluc3Vyb2ZDdU9icXgrZy9qRWY5TGtzeUhzVWRvUnlDV2t6L1IzQ0RPMXlWTnU1dVg0S2dZNXgKTTZGeVpieXdCVVBhTTZndFYvZUZTZ1hmN2lQY3FpMVVCUU9VTXFEZ3lnRHQrNGFWRGxzc09RPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMmlnRWNrb09uaTIzcXhGVjZtdzhmbjhzcDBaQ2crTHJWSTJSYTBoQmwybnFPSDZnCm5VdnJ0ZnVlNzg3MWVhNmlxYWZob2N3ZnJPcEtoeU5ONFFwQTJqUmd2V1ZkQkxpVmljR2lRKzY2VU5ja3Z5RmUKaWc3RHFXRG9MNkdWMTAraU10UXhHUGNHT0N1MmxPMFdxSlZlMnF5T3BHaGVTZVQ1OVRpdWRySVNsWjRSU3NGdAozNjB4OElBRFMxNHYxNkg5ZENqaTlxaDRTcHpSUHlRcVprOG9KQmxUWlMzZ1hlaDNOaU9hTzB6cjd5WXRBVFZ2ClpMTXFmNndFSFVzME1tbFFqbWU1NDFjS0Nkdjk1SzZQQ29Ec3VvNDZLTUVVcjVuTjNLcmRLamRieVY1SWdnaTkKdmZsNERoOXlXbWRnZHFSa1RYQmYrV3lCNE9OQkJXRTN3YjhlaVFJREFRQUJBb0lCQVFDdVJTTndMU3JLUDFrbQpoZDJ0TzdPRGxaSVZPakl1YXhwMDIvWmJ6a2ZmYmRPV044bVVmaTZZbkozVmtlMVV2Q1hqQTJKaVBzN2E4ZnFCClE3bVYyUHYvazdIbitrNDVWRDdZNGQ3L0IzaTgxWERjWWdyRW5KQy9BTlBhSU9tekswRTErMzRSSkZ4S2lOajgKMVB5eHhVa1Z4SnphUnlselBFQlZIV2Q1R0QxeVdHMStUOVdBaFRWbVJ1WDM3eDV6R1pSZXArVjM0MjRnWE5tZQprTHhJU0Y0aEFPMyt0ODRUYVpiV3JsUU1tZjdWVlRWWjZYRStMdEZnNkxJeG5vMU1JMFQ3bjlVSEFPMEFsbDV2Ck0xMEVZUFloZkkyRG1LUzhCQXlCRm93d3RuNFlQVmZBRjAxQVhucDdQQndqbndEandRZkdIMVdjUnduWlBEWHQKS2FzeGZrSVJBb0dCQVA1Z1l0NVJrM1BmckhEeXJvaXBaZGREQTROWEtTR3ZnOUdYNDFNUUJ1eUxUWHRtYnk1Zgp5KzJIbWcyYm9wYVVHWGNjdnZmUkdRUGdYVzlHNUJVbk9uWk1hT29WNUR4aXk1NWV0RHVPdktvUytCMzdrNTFkCmxDaU9vMnY0cVpIL01ZN1NMdnZZanF1ZU5TanN4NDZrUWhvZ21TS0dCR09tWVBSbzZOQVNTNjRkQW9HQkFOdU0KYytRdXVzNUhPRlRWSU5vWkRvWTM1SW00bVFGV1RCQlRaNTBndHhnZE13WnZuN2xKaWgrdGR6R3ExcW00SFJwYQp2c0RqTkVsNEM3VDFKWkZpcEFONFlhd1Q3bkxvbGlrRFZ6cFlpUDlWWEJKeDQ3TmE2dldIREx0TnFGWWJNV292CllpVHlmVGx4bm0yaVhHajc0bi8zenpvUm85OHYxWVkyVXBxLzVmWmRBb0dCQUp0d2JKbnJnVTRLUFFaYjFUa2YKUW1NU3lSL0Y4QlZzZWdGbWJmdkF6R3BaQ1VUQnFHalBFdjhYb0pSMktSa1ljS012aHFaS09KMzh5VHVKTnpDUgo0eENNeW9OWVV6cHZLSHVpNVVHTGpFL2svWWJjeHl3ZkZiemV4SS9peUVPMWpDUDQzY3I1WHQwUjlPd0lIRDFXCnRDbmhCNUpvRUdDUU42akNQcGwreEk0bEFvR0JBTFZTWkl4NkE1SkZ3OEpjVzB1RkVqZkxoWll3dlQwYmRxcXQKRjQvdjZ3ZWhaZmpVeThlTmN1UUNzY1IxWWVDOXpGdHR3c2t2WEltbytaSTBQUmk3ck5XbzRKSHJ6QzFlNWxWdApDdWVISTI0dG8yTWdhSHhDaEhiUFdMYUF4cHlHek9MenkwelVjSk8yd0srdlBqNytlT3hUVC9TWGlRM1ZSYllZCnUxUlBWSytKQW9HQUtmNFNIZktBejRCZDUycFFFNFJRM01xdzhDZkhRUk1HODNiUTEzaHR4ejFKUTRod3UwbVkKNy9iY2FzcjdBOFhxanpaU1NDY3dOS0l4OCtrVU1VaTZIazNMZEhGcFF1b01KTWd4KzUwYjlZdjNmY3dHaWJlNAo0RmpobmZBQzYyTDFpemlhdkprbUlzNnFKUzJBWnVkVEFhMHNzMXFqay96WmlTVy81dGlhUTRRPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: kong/templates/admission-webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kong-kong-validation-webhook-keypair
  namespace:  default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.9"
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURjRENDQWxpZ0F3SUJBZ0lRTmViZEF1OE1QWm15WlNrd1JkaWt3akFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGcmIyNW5MV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlOVEE1TVRReU1UQXhNVGRhRncwegpOVEE1TVRJeU1UQXhNVGRhTURNeE1UQXZCZ05WQkFNVEtHdHZibWN0YTI5dVp5MTJZV3hwWkdGMGFXOXVMWGRsClltaHZiMnN1WkdWbVlYVnNkQzV6ZG1Nd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUIKQVFDMEt0NFZGVldrQzhidCtTbTBFWGQ3T2U2K0xxa0czY3JEbDJOaGFHcHlkbDJmZ3BTNzNoVmU2S0JtMFJaQgp4VmNOWlVGaU5JUm9qbjJoOXMxY0pycndzSXhXbUx0dlMxdFZ3bmtuSUxTV0w1bU1xV1JEcWJmZEVVV3ErVG9WCjJZMEl3Z3RBcVVwZEQyMmEvaU95V3BaMWhaMEd1S25JWjZKWkRnYVoxWUxSSGs1RlBZSkw2ZmdpUEFjQlRvUU0KeTExeldFT0NiaklNaEdWSU1lZE94NzdXN1NaTnRnTm5yVEZQb1JiZXM3WjNuT3JIdzFzZUYzNk1oVXZIYk9HSgptd1AyZDlPUTZSblorMXR5eTBtV3ZFdkJRTThNS2NFemFjRENqN3RqTVVpSlZjNlFIcG8xWHlMQUtYaThNdmhyCi9yTkJNL29BNmRvN2FySkx5eHdkOG05ekFnTUJBQUdqZ1pZd2daTXdEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEcKQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZApJd1FZTUJhQUZPbzFjOHZYdmJ6NnlPclhTUGo2clEzSW9NcHhNRE1HQTFVZEVRUXNNQ3FDS0d0dmJtY3RhMjl1Clp5MTJZV3hwWkdGMGFXOXVMWGRsWW1odmIyc3VaR1ZtWVhWc2RDNXpkbU13RFFZSktvWklodmNOQVFFTEJRQUQKZ2dFQkFEVTI1TmJiOWxkRllvbjBoMFhndGQ0SVVzQVl5WGpzOS81RGdlbHkxN1dpRlRUekRmaHRybTNiaDB4dgpMY2UxT0MyVVp4T3R3ZkpocXpHOUMwRG04THJPeVR5OWZYSnFYYXpQbjdRL0l0ZVJSNWdNaEw1clJ6WTk4R1Y1ClFPZXdjY24zcFlZcGY0NW8vVmFTWklZSXBtZXNidGlPVmZMa0hNWUJnZzByTllpY2NYUk05TWtlUkc5V1BVcnUKWGxERWdlcnRld3JXbStPYVBvV2d4Z1RmQXBKamFqTytUYVZyRG90dGxxMUtxYll3b0VtK1NNL0tjb1UvS3QvawpjNko4bVRHZmxkb3N0TGJDbjFSdE9OQjV1UFR5UG5rK1pjYVgwcGsyM08zaE9rczhxUGI4R0dWRFRVVWxFai8yCksvb2FmL1oxZ1JWUm9mV203S1Y0elZFbGRZbz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdENyZUZSVlZwQXZHN2ZrcHRCRjNlem51dmk2cEJ0M0t3NWRqWVdocWNuWmRuNEtVCnU5NFZYdWlnWnRFV1FjVlhEV1ZCWWpTRWFJNTlvZmJOWENhNjhMQ01WcGk3YjB0YlZjSjVKeUMwbGkrWmpLbGsKUTZtMzNSRkZxdms2RmRtTkNNSUxRS2xLWFE5dG12NGpzbHFXZFlXZEJyaXB5R2VpV1E0R21kV0MwUjVPUlQyQwpTK240SWp3SEFVNkVETXRkYzFoRGdtNHlESVJsU0RIblRzZSsxdTBtVGJZRFo2MHhUNkVXM3JPMmQ1enF4OE5iCkhoZCtqSVZMeDJ6aGlac0Q5bmZUa09rWjJmdGJjc3RKbHJ4THdVRFBEQ25CTTJuQXdvKzdZekZJaVZYT2tCNmEKTlY4aXdDbDR2REw0YS82elFUUDZBT25hTzJxeVM4c2NIZkp2Y3dJREFRQUJBb0lCQUNyOWg1eVVTS2txUGorTwprc3JxMkEzSlZ4UitZY3JIcFpoaVNVNTI4ZDk2S3dEaTBjYTZTWE1xSXd3bG5CLzVqTG9malNoM3k1aC9WNjhNCkN4aVFEVTlkY1Q5QWxva0ovRE5NZ2tnNTM1MXVvajhVTkY2STR0eVhRSDU1bGNpYzdyQkdUUlVTMERIQWVyRGYKTDNsaGNFRitybWRxTE9rckFXd3FrcHltZTk2VjYrS1hOTVZhQWs2WUV2ZWV2TnQwdlE1MmpRNGFncVp1TnNQZwo4M1hSZHl6YTJTaDhJNlNZWEMyUjl5RHpqVWczWjA3RXdVZXE2eTNFcVAvdEFGb1JEYUo2Z28yZ1VvdFAyWmJqCllTZ3ZZZ2xNTVBDalBBekdBSXBqeEhlQ1NKRjlVSWFhZ0lWVmF6azNucUpQc1psNnFUZlRIZlhTSk9HTFFOVDIKbTcwdjk0RUNnWUVBeHlXbnc5eGg0T3l6RThVeGdQYlJOTGhjSktyeU5FWklvN0VVVjhXS0hHNExTSGxUeHVvNApRRFYrTDJ4MURKUXdGMzZaczhEdzcwUDlvSkM1b3Q4S0p5MERIMXZjd2FoTzBQOFd0ZjV6S1NHOHE5SE5nc0tVCmRoYSsxajRuUjVnVVhzTzN2WERRR240TnpSVTNhUHRnN2FhNzZiNjFUTmVJb1JndWl2SHQrS0VDZ1lFQTU1b2QKb09UMXZydlUwVklGajlYUDJZTEdmNzVoR1VzK3QwN2szVkRIMFNBaHhybStoOGdqYi9sREpHMWpWRmN2YVZWNAo0cmRJWGZibzdkVGU2cHB2TmJmdjdGcjYvVGFrNWNEOWpoR2ROYnVKM1FTcG9iNU1CVnBBOCtQT3BMY2toc0JGCldhVE5HWUNRUzZoUjFXdWlxKzA3Ymw5NVMrR0tON09CazhNRnk1TUNnWUJlMmxtWTJXd3BSTFJhMDA2cjNXTngKMStuVGNUU2huMlJUeXpFa1NTdHFOU1BjcGlVNEZqRXFyQS9wS0tCcm1GMTdvMG8wS3M3WE42d2pBU3ZhSHAvbwpYdkVneTVGUEVBcFNVMTJPMjU0Z1ZqaFdJanpmYml4bVBwa3cxRFBEVHZWTTJhMjNabmRJVndmZHlhQTF1WjNHCk0rZEhBeFc1ZnVOTno0WERtazI5WVFLQmdBWmZKQStJSFFhcFRqcVFBaDBwNmJUM054VE9uUWRBSGJLWFZnNk0KcVdLa2VxbG45TWp4aGFBUUFIdmhFb21BZUlweVVvZ1NPTWgxQVlXQmhMeDVrVE91SXNpaTNDTFpQUUloSkJpagpmV3E4QlJmeWgrUXVReE1tbjREV05Kb3RlN0RGVzJNUytKMkovdTVGN0RKdDZxVEdPd3RYVHhQNldYNGN6eVRNCmliMUhBb0dBUGgwbzV0MXg5WkhwLytJR3ZmUDJqL1ExdURRSFczNUhYSEZSbUU4eURaaWtQREU2UWl5MTl5cjQKem9waDd0dWxZTkdiSExQK2o2N1JQbkM0V1JIVlJHTGlSVFNSbGdNVmVpZ0ovVHYzMkJIWmZEY0c1aXNFaWgzNgppUVF5dWNlYURRaGhXYWJMWkd6SmdzRjY2ekZWWlRiU282amdQZC8xMFdUUkRsM3FwNWM9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.9"
  name: kong-kong
rules:

- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - backendtlspolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - backendtlspolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongcustomentities
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongcustomentities/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongupstreampolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongupstreampolicies/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumergroups
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumergroups/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - ingressclassparameterses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gateways
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gateways/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - httproutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - httproutes/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - referencegrants
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - referencegrants/status
  verbs:
  - get
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - tcproutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - tcproutes/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - tlsroutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - tlsroutes/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - udproutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - udproutes/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - grpcroutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - grpcroutes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch

- apiGroups:
  - configuration.konghq.com
  resources:
  - konglicenses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - konglicenses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongvaults
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongvaults/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses/status
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch

- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
---
# Source: kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kong-kong
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.9"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kong-kong
subjects:
  - kind: ServiceAccount
    name: kong-kong
    namespace: default
---
# Source: kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kong-kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.9"
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      # Defaults to "<election-id>-<ingress-class>"
      # Here: "<kong-ingress-controller-leader-nginx>-<nginx>"
      # This has to be adapted if you change either parameter
      # when launching the nginx-ingress-controller.
      - "kong-ingress-controller-leader-kong-kong"
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  # Begin KIC 2.x leader permissions
  - apiGroups:
      - ""
      - coordination.k8s.io
    resources:
      - configmaps
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
---
# Source: kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kong-kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.9"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kong-kong
subjects:
  - kind: ServiceAccount
    name: kong-kong
    namespace: default
---
# Source: kong/templates/admission-webhook.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-kong-validation-webhook
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.9"
spec:
  ports:
  - name: webhook
    port: 443
    protocol: TCP
    targetPort: webhook
  selector:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.9"
    app.kubernetes.io/component: app
---
# Source: kong/templates/controller-service-metrics.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-kong-metrics
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.9"
spec:
  ports:
  - name: cmetrics
    port: 10255
    protocol: TCP
    targetPort: cmetrics
  - name: status
    port: 10254
    protocol: TCP
    targetPort: cstatus
  selector:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.9"
    app.kubernetes.io/component: app
---
# Source: kong/templates/service-kong-manager.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-kong-manager
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.9"
spec:
  type: NodePort
  ports:
  - name: kong-manager
    port: 8002
    targetPort: 8002
    protocol: TCP
  - name: kong-manager-tls
    port: 8445
    targetPort: 8445
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "kong"
---
# Source: kong/templates/service-kong-proxy.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-kong-proxy
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.9"
    enable-metrics: "true"
spec:
  type: LoadBalancer
  ports:
  - name: kong-proxy
    port: 80
    targetPort: 8000
    protocol: TCP
  - name: kong-proxy-tls
    port: 443
    targetPort: 8443
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "kong"
---
# Source: kong/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong-kong
  namespace:  default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.9"
    app.kubernetes.io/component: app
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: kong
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: "kong"

  template:
    metadata:
      annotations:
        kuma.io/service-account-token-volume: kong-kong-token
        kuma.io/gateway: "enabled"
        traffic.sidecar.istio.io/includeInboundPorts: ""
      labels:
        app.kubernetes.io/name: kong
        helm.sh/chart: kong-2.51.0
        app.kubernetes.io/instance: "kong"
        app.kubernetes.io/managed-by: "Helm"
        
        app.kubernetes.io/version: "3.9"
        app.kubernetes.io/component: app
        app: kong-kong
        
        version: "3.9"
    spec:
      nodeSelector:
        agentpool: nodepool1
        beta.kubernetes.io/arch: amd64
      serviceAccountName: kong-kong
      automountServiceAccountToken: false
      
      initContainers:
      - name: clear-stale-pid
        image: kong:3.9
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        resources:
          {}
        command:
        - "rm"
        - "-vrf"
        - "$KONG_PREFIX/pids"
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "127.0.0.1:8444 http2 ssl, [::1]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_KIC
          value: "on"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        
        volumeMounts:
        - name: kong-kong-prefix-dir
          mountPath: /kong_prefix/
        - name: kong-kong-tmp
          mountPath: /tmp
      containers:
      - name: ingress-controller
        securityContext:
      
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        args:
        
        ports:
        - name: webhook
          containerPort: 8080
          protocol: TCP
        - name: cmetrics
          containerPort: 10255
          protocol: TCP
        - name: cstatus
          containerPort: 10254
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace  
        
        
        
        
        
        
        - name: CONTROLLER_ADMISSION_WEBHOOK_LISTEN
          value: "0.0.0.0:8080"
        - name: CONTROLLER_ELECTION_ID
          value: "kong-ingress-controller-leader-kong"
        - name: CONTROLLER_INGRESS_CLASS
          value: "kong"
        - name: CONTROLLER_KONG_ADMIN_TLS_SKIP_VERIFY
          value: "true"
        - name: CONTROLLER_KONG_ADMIN_URL
          value: "https://localhost:8444"
        - name: CONTROLLER_PUBLISH_SERVICE
          value: "default/kong-kong-proxy"
        
        image: kong/kubernetes-ingress-controller:3.5
        imagePullPolicy: IfNotPresent
      
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {}
        volumeMounts:
        - name: webhook-cert
          mountPath: /admission-webhook
          readOnly: true
        - name: kong-kong-token
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          readOnly: true
        
        
      
      - name: "proxy"
        image: kong:3.9
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "127.0.0.1:8444 http2 ssl, [::1]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_KIC
          value: "on"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_NGINX_DAEMON
          value: "off"
        
        lifecycle:
          preStop:
            exec:
              command:
              - kong
              - quit
              - --wait=15
        ports:
        - name: proxy
          containerPort: 8000
          protocol: TCP
        - name: proxy-tls
          containerPort: 8443
          protocol: TCP
        - name: status
          containerPort: 8100
          protocol: TCP
        volumeMounts:
          - name: kong-kong-prefix-dir
            mountPath: /kong_prefix/
          - name: kong-kong-tmp
            mountPath: /tmp
          
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /status/ready
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {} 
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 30
      volumes:
        - name: kong-kong-prefix-dir
          emptyDir:
            sizeLimit: 256Mi
        - name: kong-kong-tmp
          emptyDir:
            sizeLimit: 1Gi
        - name: kong-kong-token
          projected:
            sources:
            - serviceAccountToken:
                expirationSeconds: 3607
                path: token
            - configMap:
                items:
                - key: ca.crt
                  path: ca.crt
                name: kube-root-ca.crt
            - downwardAPI:
                items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
        - name: webhook-cert
          secret:
            secretName: kong-kong-validation-webhook-keypair
---
# Source: kong/templates/admission-webhook.yaml
kind: ValidatingWebhookConfiguration
apiVersion: admissionregistration.k8s.io/v1
metadata:
  name: kong-kong-default-validations
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.9"
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQVBVRlB5cVFoaC90NW04bGVwMUE2YUl3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalV3T1RFME1qRXdNVEUzV2hjTgpNelV3T1RFeU1qRXdNVEUzV2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOb29CSEpLRHA0dHQ2c1JWZXBzUEg1L0xLZEcKUW9QaTYxU05rV3RJUVpkcDZqaCtvSjFMNjdYN251L085WG11b3FtbjRhSE1INnpxU29jalRlRUtRTm8wWUwxbApYUVM0bFluQm9rUHV1bERYSkw4aFhvb093NmxnNkMraGxkZFBvakxVTVJqM0JqZ3J0cFR0RnFpVlh0cXNqcVJvClhrbmsrZlU0cm5heUVwV2VFVXJCYmQrdE1mQ0FBMHRlTDllaC9YUW80dmFvZUVxYzBUOGtLbVpQS0NRWlUyVXQKNEYzb2R6WWptanRNNis4bUxRRTFiMlN6S24rc0JCMUxOREpwVUk1bnVlTlhDZ25iL2VTdWp3cUE3THFPT2lqQgpGSytaemR5cTNTbzNXOGxlU0lJSXZiMzVlQTRmY2xwbllIYWtaRTF3WC9sc2dlRGpRUVZoTjhHL0hva0NBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCVHFOWFBMMTcyOCtzanExMGo0K3EwTgp5S0RLY1RBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVdwM2NPSmkrdU1zTW96Z0NEbG03MUVUYWh0eXhUNWVLCnVDWitrRXE3ejBHWUllSTNtZUptS2NuSGVWd3UyZFk2Sm1wNmlaYWxIbjdRYjVqa3EwSEZUREh1eDdyTWx3WFIKempialFPV2UxdDR5cVU4WUZ1VDg0WWpXWVgvbVczbVJjN3lpVXZzZHhXaGhLci93RHRNSTI2bVBTZzNqZkEwNgpPQmpWLzYrUXBwdHoyYnFNdGJwTlJYVnM2MXFYY3dRVElibkhTWUc1d0xtTFN0amlpdGF5V1pleFZaQnhqZitkCnM2bUN4aG5weXluc3Vyb2ZDdU9icXgrZy9qRWY5TGtzeUhzVWRvUnlDV2t6L1IzQ0RPMXlWTnU1dVg0S2dZNXgKTTZGeVpieXdCVVBhTTZndFYvZUZTZ1hmN2lQY3FpMVVCUU9VTXFEZ3lnRHQrNGFWRGxzc09RPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: kong-kong-validation-webhook
      namespace: default
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: secrets.credentials.validation.ingress-controller.konghq.com
  objectSelector:
    matchExpressions:
    - key: "konghq.com/credential"
      operator: "Exists"
    - key: "konghq.com/credential"
      operator: "NotIn"
      values:
      - "konnect"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secrets
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQVBVRlB5cVFoaC90NW04bGVwMUE2YUl3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalV3T1RFME1qRXdNVEUzV2hjTgpNelV3T1RFeU1qRXdNVEUzV2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOb29CSEpLRHA0dHQ2c1JWZXBzUEg1L0xLZEcKUW9QaTYxU05rV3RJUVpkcDZqaCtvSjFMNjdYN251L085WG11b3FtbjRhSE1INnpxU29jalRlRUtRTm8wWUwxbApYUVM0bFluQm9rUHV1bERYSkw4aFhvb093NmxnNkMraGxkZFBvakxVTVJqM0JqZ3J0cFR0RnFpVlh0cXNqcVJvClhrbmsrZlU0cm5heUVwV2VFVXJCYmQrdE1mQ0FBMHRlTDllaC9YUW80dmFvZUVxYzBUOGtLbVpQS0NRWlUyVXQKNEYzb2R6WWptanRNNis4bUxRRTFiMlN6S24rc0JCMUxOREpwVUk1bnVlTlhDZ25iL2VTdWp3cUE3THFPT2lqQgpGSytaemR5cTNTbzNXOGxlU0lJSXZiMzVlQTRmY2xwbllIYWtaRTF3WC9sc2dlRGpRUVZoTjhHL0hva0NBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCVHFOWFBMMTcyOCtzanExMGo0K3EwTgp5S0RLY1RBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVdwM2NPSmkrdU1zTW96Z0NEbG03MUVUYWh0eXhUNWVLCnVDWitrRXE3ejBHWUllSTNtZUptS2NuSGVWd3UyZFk2Sm1wNmlaYWxIbjdRYjVqa3EwSEZUREh1eDdyTWx3WFIKempialFPV2UxdDR5cVU4WUZ1VDg0WWpXWVgvbVczbVJjN3lpVXZzZHhXaGhLci93RHRNSTI2bVBTZzNqZkEwNgpPQmpWLzYrUXBwdHoyYnFNdGJwTlJYVnM2MXFYY3dRVElibkhTWUc1d0xtTFN0amlpdGF5V1pleFZaQnhqZitkCnM2bUN4aG5weXluc3Vyb2ZDdU9icXgrZy9qRWY5TGtzeUhzVWRvUnlDV2t6L1IzQ0RPMXlWTnU1dVg0S2dZNXgKTTZGeVpieXdCVVBhTTZndFYvZUZTZ1hmN2lQY3FpMVVCUU9VTXFEZ3lnRHQrNGFWRGxzc09RPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: kong-kong-validation-webhook
      namespace: default
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: secrets.plugins.validation.ingress-controller.konghq.com
  objectSelector:
    matchExpressions:
    - key: owner
      operator: NotIn
      values:
      - helm
    - key: "konghq.com/credential"
      operator: "NotIn"
      values:
      - "konnect"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secrets
  sideEffects: None
- name: validations.kong.konghq.com
  matchPolicy: Equivalent
  objectSelector:
    matchExpressions:
    - key: owner
      operator: NotIn
      values:
      - helm
  failurePolicy: Ignore
  sideEffects: None
  admissionReviewVersions: ["v1beta1"]
  rules:
  - apiGroups:
    - configuration.konghq.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - kongconsumers
    - kongplugins
    - kongclusterplugins
    - kongingresses
  - apiGroups:
    - ''
    apiVersions:
    - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - services
  - apiGroups:
    - networking.k8s.io
    apiVersions:
      - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  - apiGroups:
    - gateway.networking.k8s.io
    apiVersions:
    - 'v1alpha2'
    - 'v1beta1'
    - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - gateways
    - httproutes
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQVBVRlB5cVFoaC90NW04bGVwMUE2YUl3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalV3T1RFME1qRXdNVEUzV2hjTgpNelV3T1RFeU1qRXdNVEUzV2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOb29CSEpLRHA0dHQ2c1JWZXBzUEg1L0xLZEcKUW9QaTYxU05rV3RJUVpkcDZqaCtvSjFMNjdYN251L085WG11b3FtbjRhSE1INnpxU29jalRlRUtRTm8wWUwxbApYUVM0bFluQm9rUHV1bERYSkw4aFhvb093NmxnNkMraGxkZFBvakxVTVJqM0JqZ3J0cFR0RnFpVlh0cXNqcVJvClhrbmsrZlU0cm5heUVwV2VFVXJCYmQrdE1mQ0FBMHRlTDllaC9YUW80dmFvZUVxYzBUOGtLbVpQS0NRWlUyVXQKNEYzb2R6WWptanRNNis4bUxRRTFiMlN6S24rc0JCMUxOREpwVUk1bnVlTlhDZ25iL2VTdWp3cUE3THFPT2lqQgpGSytaemR5cTNTbzNXOGxlU0lJSXZiMzVlQTRmY2xwbllIYWtaRTF3WC9sc2dlRGpRUVZoTjhHL0hva0NBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCVHFOWFBMMTcyOCtzanExMGo0K3EwTgp5S0RLY1RBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVdwM2NPSmkrdU1zTW96Z0NEbG03MUVUYWh0eXhUNWVLCnVDWitrRXE3ejBHWUllSTNtZUptS2NuSGVWd3UyZFk2Sm1wNmlaYWxIbjdRYjVqa3EwSEZUREh1eDdyTWx3WFIKempialFPV2UxdDR5cVU4WUZ1VDg0WWpXWVgvbVczbVJjN3lpVXZzZHhXaGhLci93RHRNSTI2bVBTZzNqZkEwNgpPQmpWLzYrUXBwdHoyYnFNdGJwTlJYVnM2MXFYY3dRVElibkhTWUc1d0xtTFN0amlpdGF5V1pleFZaQnhqZitkCnM2bUN4aG5weXluc3Vyb2ZDdU9icXgrZy9qRWY5TGtzeUhzVWRvUnlDV2t6L1IzQ0RPMXlWTnU1dVg0S2dZNXgKTTZGeVpieXdCVVBhTTZndFYvZUZTZ1hmN2lQY3FpMVVCUU9VTXFEZ3lnRHQrNGFWRGxzc09RPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: kong-kong-validation-webhook
      namespace: default
